// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/swag"
)

// NetFlowRecord net flow record
// swagger:model NetFlowRecord
type NetFlowRecord struct {

	// data type
	// Read Only: true
	DataType string `json:"dataType,omitempty"`

	// destination m bytes
	// Read Only: true
	DestinationMBytes float64 `json:"destinationMBytes,omitempty"`

	// dst DNS
	// Read Only: true
	DstDNS string `json:"dstDNS,omitempty"`

	// dst IP
	// Read Only: true
	DstIP string `json:"dstIP,omitempty"`

	// dst port
	// Read Only: true
	DstPort int32 `json:"dstPort,omitempty"`

	// first epoch in sec
	// Read Only: true
	FirstEpochInSec int64 `json:"firstEpochInSec,omitempty"`

	// if in
	// Read Only: true
	IfIn int64 `json:"ifIn,omitempty"`

	// if out
	// Read Only: true
	IfOut int64 `json:"ifOut,omitempty"`

	// last epoch in sec
	// Read Only: true
	LastEpochInSec int64 `json:"lastEpochInSec,omitempty"`

	// percent usage
	// Read Only: true
	PercentUsage float64 `json:"percentUsage,omitempty"`

	// protocol
	// Read Only: true
	Protocol string `json:"protocol,omitempty"`

	// source m bytes
	// Read Only: true
	SourceMBytes float64 `json:"sourceMBytes,omitempty"`

	// src DNS
	// Read Only: true
	SrcDNS string `json:"srcDNS,omitempty"`

	// src IP
	// Read Only: true
	SrcIP string `json:"srcIP,omitempty"`

	// src port
	// Read Only: true
	SrcPort int32 `json:"srcPort,omitempty"`

	// usage
	// Read Only: true
	Usage float64 `json:"usage,omitempty"`
}

// Validate validates this net flow record
func (m *NetFlowRecord) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *NetFlowRecord) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *NetFlowRecord) UnmarshalBinary(b []byte) error {
	var res NetFlowRecord
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
