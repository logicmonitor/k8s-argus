// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// WebsiteItemConfig website item config
// swagger:model WebsiteItemConfig
type WebsiteItemConfig struct {

	// exclude SDT
	ExcludeSDT bool `json:"excludeSDT,omitempty"`

	// website
	// Required: true
	Website *string `json:"website"`

	// website group
	// Required: true
	WebsiteGroup *string `json:"websiteGroup"`
}

// Validate validates this website item config
func (m *WebsiteItemConfig) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateWebsite(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateWebsiteGroup(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *WebsiteItemConfig) validateWebsite(formats strfmt.Registry) error {

	if err := validate.Required("website", "body", m.Website); err != nil {
		return err
	}

	return nil
}

func (m *WebsiteItemConfig) validateWebsiteGroup(formats strfmt.Registry) error {

	if err := validate.Required("websiteGroup", "body", m.WebsiteGroup); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *WebsiteItemConfig) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *WebsiteItemConfig) UnmarshalBinary(b []byte) error {
	var res WebsiteItemConfig
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
