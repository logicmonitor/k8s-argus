// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/swag"
)

// UnmonitoredDevices unmonitored devices
// swagger:model UnmonitoredDevices
type UnmonitoredDevices struct {

	// collector description
	// Read Only: true
	CollectorDescription string `json:"collectorDescription,omitempty"`

	// collector Id
	// Read Only: true
	CollectorID int32 `json:"collectorId,omitempty"`

	// device status
	// Read Only: true
	DeviceStatus string `json:"deviceStatus,omitempty"`

	// device type
	// Read Only: true
	DeviceType string `json:"deviceType,omitempty"`

	// display as
	// Read Only: true
	DisplayAs string `json:"displayAs,omitempty"`

	// dns
	// Read Only: true
	DNS string `json:"dns,omitempty"`

	// end date
	// Read Only: true
	EndDate string `json:"endDate,omitempty"`

	// end timestamp
	// Read Only: true
	EndTimestamp int64 `json:"endTimestamp,omitempty"`

	// forward Ip
	// Read Only: true
	ForwardIP string `json:"forwardIp,omitempty"`

	// id
	// Read Only: true
	ID int32 `json:"id,omitempty"`

	// ip
	// Read Only: true
	IP string `json:"ip,omitempty"`

	// manufacturer
	// Read Only: true
	Manufacturer string `json:"manufacturer,omitempty"`

	// nse Id
	// Read Only: true
	NseID int32 `json:"nseId,omitempty"`

	// nse scan Id
	// Read Only: true
	NseScanID string `json:"nseScanId,omitempty"`

	// nsp Id
	// Read Only: true
	NspID int32 `json:"nspId,omitempty"`

	// nsp name
	// Read Only: true
	NspName string `json:"nspName,omitempty"`

	// ports
	// Read Only: true
	Ports string `json:"ports,omitempty"`

	// status
	// Read Only: true
	Status string `json:"status,omitempty"`

	// sys name
	// Read Only: true
	SysName string `json:"sysName,omitempty"`
}

// Validate validates this unmonitored devices
func (m *UnmonitoredDevices) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *UnmonitoredDevices) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *UnmonitoredDevices) UnmarshalBinary(b []byte) error {
	var res UnmonitoredDevices
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
