// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GcpAccountTestResult gcp account test result
// swagger:model GcpAccountTestResult
type GcpAccountTestResult struct {

	// detail link
	DetailLink string `json:"detailLink,omitempty"`

	// no permission services
	// Unique: true
	NoPermissionServices []string `json:"noPermissionServices,omitempty"`

	// non permission errors
	// Unique: true
	NonPermissionErrors []string `json:"nonPermissionErrors,omitempty"`
}

// Validate validates this gcp account test result
func (m *GcpAccountTestResult) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateNoPermissionServices(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateNonPermissionErrors(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GcpAccountTestResult) validateNoPermissionServices(formats strfmt.Registry) error {

	if swag.IsZero(m.NoPermissionServices) { // not required
		return nil
	}

	if err := validate.UniqueItems("noPermissionServices", "body", m.NoPermissionServices); err != nil {
		return err
	}

	return nil
}

func (m *GcpAccountTestResult) validateNonPermissionErrors(formats strfmt.Registry) error {

	if swag.IsZero(m.NonPermissionErrors) { // not required
		return nil
	}

	if err := validate.UniqueItems("nonPermissionErrors", "body", m.NonPermissionErrors); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *GcpAccountTestResult) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GcpAccountTestResult) UnmarshalBinary(b []byte) error {
	var res GcpAccountTestResult
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
