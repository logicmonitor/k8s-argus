// Code generated by go-swagger; DO NOT EDIT.

package lm

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetDebugCommandResultParams creates a new GetDebugCommandResultParams object
// with the default values initialized.
func NewGetDebugCommandResultParams() *GetDebugCommandResultParams {
	var (
		collectorIDDefault = int32(-1)
	)
	return &GetDebugCommandResultParams{
		CollectorID: &collectorIDDefault,

		timeout: cr.DefaultTimeout,
	}
}

// NewGetDebugCommandResultParamsWithTimeout creates a new GetDebugCommandResultParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetDebugCommandResultParamsWithTimeout(timeout time.Duration) *GetDebugCommandResultParams {
	var (
		collectorIDDefault = int32(-1)
	)
	return &GetDebugCommandResultParams{
		CollectorID: &collectorIDDefault,

		timeout: timeout,
	}
}

// NewGetDebugCommandResultParamsWithContext creates a new GetDebugCommandResultParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetDebugCommandResultParamsWithContext(ctx context.Context) *GetDebugCommandResultParams {
	var (
		collectorIdDefault = int32(-1)
	)
	return &GetDebugCommandResultParams{
		CollectorID: &collectorIdDefault,

		Context: ctx,
	}
}

// NewGetDebugCommandResultParamsWithHTTPClient creates a new GetDebugCommandResultParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetDebugCommandResultParamsWithHTTPClient(client *http.Client) *GetDebugCommandResultParams {
	var (
		collectorIdDefault = int32(-1)
	)
	return &GetDebugCommandResultParams{
		CollectorID: &collectorIdDefault,
		HTTPClient:  client,
	}
}

/*GetDebugCommandResultParams contains all the parameters to send to the API endpoint
for the get debug command result operation typically these are written to a http.Request
*/
type GetDebugCommandResultParams struct {

	/*CollectorID*/
	CollectorID *int32
	/*ID*/
	ID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get debug command result params
func (o *GetDebugCommandResultParams) WithTimeout(timeout time.Duration) *GetDebugCommandResultParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get debug command result params
func (o *GetDebugCommandResultParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get debug command result params
func (o *GetDebugCommandResultParams) WithContext(ctx context.Context) *GetDebugCommandResultParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get debug command result params
func (o *GetDebugCommandResultParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get debug command result params
func (o *GetDebugCommandResultParams) WithHTTPClient(client *http.Client) *GetDebugCommandResultParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get debug command result params
func (o *GetDebugCommandResultParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCollectorID adds the collectorID to the get debug command result params
func (o *GetDebugCommandResultParams) WithCollectorID(collectorID *int32) *GetDebugCommandResultParams {
	o.SetCollectorID(collectorID)
	return o
}

// SetCollectorID adds the collectorId to the get debug command result params
func (o *GetDebugCommandResultParams) SetCollectorID(collectorID *int32) {
	o.CollectorID = collectorID
}

// WithID adds the id to the get debug command result params
func (o *GetDebugCommandResultParams) WithID(id string) *GetDebugCommandResultParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the get debug command result params
func (o *GetDebugCommandResultParams) SetID(id string) {
	o.ID = id
}

// WriteToRequest writes these params to a swagger request
func (o *GetDebugCommandResultParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.CollectorID != nil {

		// query param collectorId
		var qrCollectorID int32
		if o.CollectorID != nil {
			qrCollectorID = *o.CollectorID
		}
		qCollectorID := swag.FormatInt32(qrCollectorID)
		if qCollectorID != "" {
			if err := r.SetQueryParam("collectorId", qCollectorID); err != nil {
				return err
			}
		}

	}

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
