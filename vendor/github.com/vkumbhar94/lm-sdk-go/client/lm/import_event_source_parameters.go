// Code generated by go-swagger; DO NOT EDIT.

package lm

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewImportEventSourceParams creates a new ImportEventSourceParams object
// with the default values initialized.
func NewImportEventSourceParams() *ImportEventSourceParams {
	var ()
	return &ImportEventSourceParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewImportEventSourceParamsWithTimeout creates a new ImportEventSourceParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewImportEventSourceParamsWithTimeout(timeout time.Duration) *ImportEventSourceParams {
	var ()
	return &ImportEventSourceParams{

		timeout: timeout,
	}
}

// NewImportEventSourceParamsWithContext creates a new ImportEventSourceParams object
// with the default values initialized, and the ability to set a context for a request
func NewImportEventSourceParamsWithContext(ctx context.Context) *ImportEventSourceParams {
	var ()
	return &ImportEventSourceParams{

		Context: ctx,
	}
}

// NewImportEventSourceParamsWithHTTPClient creates a new ImportEventSourceParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewImportEventSourceParamsWithHTTPClient(client *http.Client) *ImportEventSourceParams {
	var ()
	return &ImportEventSourceParams{
		HTTPClient: client,
	}
}

/*ImportEventSourceParams contains all the parameters to send to the API endpoint
for the import event source operation typically these are written to a http.Request
*/
type ImportEventSourceParams struct {

	/*File*/
	File runtime.NamedReadCloser

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the import event source params
func (o *ImportEventSourceParams) WithTimeout(timeout time.Duration) *ImportEventSourceParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the import event source params
func (o *ImportEventSourceParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the import event source params
func (o *ImportEventSourceParams) WithContext(ctx context.Context) *ImportEventSourceParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the import event source params
func (o *ImportEventSourceParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the import event source params
func (o *ImportEventSourceParams) WithHTTPClient(client *http.Client) *ImportEventSourceParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the import event source params
func (o *ImportEventSourceParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithFile adds the file to the import event source params
func (o *ImportEventSourceParams) WithFile(file runtime.NamedReadCloser) *ImportEventSourceParams {
	o.SetFile(file)
	return o
}

// SetFile adds the file to the import event source params
func (o *ImportEventSourceParams) SetFile(file runtime.NamedReadCloser) {
	o.File = file
}

// WriteToRequest writes these params to a swagger request
func (o *ImportEventSourceParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// form file param file
	if err := r.SetFileParam("file", o.File); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
