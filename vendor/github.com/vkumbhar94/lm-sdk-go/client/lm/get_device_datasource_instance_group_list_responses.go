// Code generated by go-swagger; DO NOT EDIT.

package lm

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/vkumbhar94/lm-sdk-go/models"
)

// GetDeviceDatasourceInstanceGroupListReader is a Reader for the GetDeviceDatasourceInstanceGroupList structure.
type GetDeviceDatasourceInstanceGroupListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDeviceDatasourceInstanceGroupListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetDeviceDatasourceInstanceGroupListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewGetDeviceDatasourceInstanceGroupListDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetDeviceDatasourceInstanceGroupListOK creates a GetDeviceDatasourceInstanceGroupListOK with default headers values
func NewGetDeviceDatasourceInstanceGroupListOK() *GetDeviceDatasourceInstanceGroupListOK {
	return &GetDeviceDatasourceInstanceGroupListOK{}
}

/*GetDeviceDatasourceInstanceGroupListOK handles this case with default header values.

successful operation
*/
type GetDeviceDatasourceInstanceGroupListOK struct {
	Payload *models.DeviceDatasourceInstanceGroupPaginationResponse
}

func (o *GetDeviceDatasourceInstanceGroupListOK) Error() string {
	return fmt.Sprintf("[GET /device/devices/{deviceId}/devicedatasources/{deviceDsId}/groups][%d] getDeviceDatasourceInstanceGroupListOK  %+v", 200, o.Payload)
}

func (o *GetDeviceDatasourceInstanceGroupListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DeviceDatasourceInstanceGroupPaginationResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDeviceDatasourceInstanceGroupListDefault creates a GetDeviceDatasourceInstanceGroupListDefault with default headers values
func NewGetDeviceDatasourceInstanceGroupListDefault(code int) *GetDeviceDatasourceInstanceGroupListDefault {
	return &GetDeviceDatasourceInstanceGroupListDefault{
		_statusCode: code,
	}
}

/*GetDeviceDatasourceInstanceGroupListDefault handles this case with default header values.

Error
*/
type GetDeviceDatasourceInstanceGroupListDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the get device datasource instance group list default response
func (o *GetDeviceDatasourceInstanceGroupListDefault) Code() int {
	return o._statusCode
}

func (o *GetDeviceDatasourceInstanceGroupListDefault) Error() string {
	return fmt.Sprintf("[GET /device/devices/{deviceId}/devicedatasources/{deviceDsId}/groups][%d] getDeviceDatasourceInstanceGroupList default  %+v", o._statusCode, o.Payload)
}

func (o *GetDeviceDatasourceInstanceGroupListDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
