// Code generated by go-swagger; DO NOT EDIT.

package lm

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/vkumbhar94/lm-sdk-go/models"
)

// GetImmediateDeviceListByDeviceGroupIDReader is a Reader for the GetImmediateDeviceListByDeviceGroupID structure.
type GetImmediateDeviceListByDeviceGroupIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetImmediateDeviceListByDeviceGroupIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetImmediateDeviceListByDeviceGroupIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewGetImmediateDeviceListByDeviceGroupIDDefault(response.Code())
		if result.Code() == 429 {
                        errResp :=  &models.ErrorResponse{
                                                ErrorCode: 429,
                                                ErrorDetail: map[string]interface{}{
                                                        "x-rate-limit-limit": response.GetHeader("x-rate-limit-limit"),
                                                        "x-rate-limit-remaining": response.GetHeader("x-rate-limit-remaining"),
                                                        "x-rate-limit-window": response.GetHeader("x-rate-limit-window"),
                                                },
                                                ErrorMessage: "Customized response from argus sdk",
                                        }
			result.Payload = errResp
                        return nil, result
                }
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetImmediateDeviceListByDeviceGroupIDOK creates a GetImmediateDeviceListByDeviceGroupIDOK with default headers values
func NewGetImmediateDeviceListByDeviceGroupIDOK() *GetImmediateDeviceListByDeviceGroupIDOK {
	return &GetImmediateDeviceListByDeviceGroupIDOK{}
}

/*GetImmediateDeviceListByDeviceGroupIDOK handles this case with default header values.

successful operation
*/
type GetImmediateDeviceListByDeviceGroupIDOK struct {
	Payload *models.DevicePaginationResponse
}

func (o *GetImmediateDeviceListByDeviceGroupIDOK) Error() string {
	return fmt.Sprintf("[GET /device/groups/{id}/devices][%d] getImmediateDeviceListByDeviceGroupIdOK  %+v", 200, o.Payload)
}

func (o *GetImmediateDeviceListByDeviceGroupIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DevicePaginationResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetImmediateDeviceListByDeviceGroupIDDefault creates a GetImmediateDeviceListByDeviceGroupIDDefault with default headers values
func NewGetImmediateDeviceListByDeviceGroupIDDefault(code int) *GetImmediateDeviceListByDeviceGroupIDDefault {
	return &GetImmediateDeviceListByDeviceGroupIDDefault{
		_statusCode: code,
	}
}

/*GetImmediateDeviceListByDeviceGroupIDDefault handles this case with default header values.

Error
*/
type GetImmediateDeviceListByDeviceGroupIDDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the get immediate device list by device group Id default response
func (o *GetImmediateDeviceListByDeviceGroupIDDefault) Code() int {
	return o._statusCode
}

func (o *GetImmediateDeviceListByDeviceGroupIDDefault) Error() string {
	return fmt.Sprintf("[GET /device/groups/{id}/devices][%d] getImmediateDeviceListByDeviceGroupId default  %+v", o._statusCode, o.Payload)
}

func (o *GetImmediateDeviceListByDeviceGroupIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
