// Code generated by go-swagger; DO NOT EDIT.

package lm

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/vkumbhar94/lm-sdk-go/models"
)

// GetDeviceDatasourceByIDReader is a Reader for the GetDeviceDatasourceByID structure.
type GetDeviceDatasourceByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDeviceDatasourceByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetDeviceDatasourceByIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewGetDeviceDatasourceByIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetDeviceDatasourceByIDOK creates a GetDeviceDatasourceByIDOK with default headers values
func NewGetDeviceDatasourceByIDOK() *GetDeviceDatasourceByIDOK {
	return &GetDeviceDatasourceByIDOK{}
}

/*GetDeviceDatasourceByIDOK handles this case with default header values.

successful operation
*/
type GetDeviceDatasourceByIDOK struct {
	Payload *models.DeviceDataSource
}

func (o *GetDeviceDatasourceByIDOK) Error() string {
	return fmt.Sprintf("[GET /device/devices/{deviceId}/devicedatasources/{id}][%d] getDeviceDatasourceByIdOK  %+v", 200, o.Payload)
}

func (o *GetDeviceDatasourceByIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DeviceDataSource)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDeviceDatasourceByIDDefault creates a GetDeviceDatasourceByIDDefault with default headers values
func NewGetDeviceDatasourceByIDDefault(code int) *GetDeviceDatasourceByIDDefault {
	return &GetDeviceDatasourceByIDDefault{
		_statusCode: code,
	}
}

/*GetDeviceDatasourceByIDDefault handles this case with default header values.

Error
*/
type GetDeviceDatasourceByIDDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the get device datasource by Id default response
func (o *GetDeviceDatasourceByIDDefault) Code() int {
	return o._statusCode
}

func (o *GetDeviceDatasourceByIDDefault) Error() string {
	return fmt.Sprintf("[GET /device/devices/{deviceId}/devicedatasources/{id}][%d] getDeviceDatasourceById default  %+v", o._statusCode, o.Payload)
}

func (o *GetDeviceDatasourceByIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
