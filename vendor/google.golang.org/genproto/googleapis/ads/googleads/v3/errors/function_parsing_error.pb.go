// Code generated by protoc-gen-go. DO NOT EDIT.
// source: google/ads/googleads/v3/errors/function_parsing_error.proto

package errors

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Enum describing possible function parsing errors.
type FunctionParsingErrorEnum_FunctionParsingError int32

const (
	// Enum unspecified.
	FunctionParsingErrorEnum_UNSPECIFIED FunctionParsingErrorEnum_FunctionParsingError = 0
	// The received error code is not known in this version.
	FunctionParsingErrorEnum_UNKNOWN FunctionParsingErrorEnum_FunctionParsingError = 1
	// Unexpected end of function string.
	FunctionParsingErrorEnum_NO_MORE_INPUT FunctionParsingErrorEnum_FunctionParsingError = 2
	// Could not find an expected character.
	FunctionParsingErrorEnum_EXPECTED_CHARACTER FunctionParsingErrorEnum_FunctionParsingError = 3
	// Unexpected separator character.
	FunctionParsingErrorEnum_UNEXPECTED_SEPARATOR FunctionParsingErrorEnum_FunctionParsingError = 4
	// Unmatched left bracket or parenthesis.
	FunctionParsingErrorEnum_UNMATCHED_LEFT_BRACKET FunctionParsingErrorEnum_FunctionParsingError = 5
	// Unmatched right bracket or parenthesis.
	FunctionParsingErrorEnum_UNMATCHED_RIGHT_BRACKET FunctionParsingErrorEnum_FunctionParsingError = 6
	// Functions are nested too deeply.
	FunctionParsingErrorEnum_TOO_MANY_NESTED_FUNCTIONS FunctionParsingErrorEnum_FunctionParsingError = 7
	// Missing right-hand-side operand.
	FunctionParsingErrorEnum_MISSING_RIGHT_HAND_OPERAND FunctionParsingErrorEnum_FunctionParsingError = 8
	// Invalid operator/function name.
	FunctionParsingErrorEnum_INVALID_OPERATOR_NAME FunctionParsingErrorEnum_FunctionParsingError = 9
	// Feed attribute operand's argument is not an integer.
	FunctionParsingErrorEnum_FEED_ATTRIBUTE_OPERAND_ARGUMENT_NOT_INTEGER FunctionParsingErrorEnum_FunctionParsingError = 10
	// Missing function operands.
	FunctionParsingErrorEnum_NO_OPERANDS FunctionParsingErrorEnum_FunctionParsingError = 11
	// Function had too many operands.
	FunctionParsingErrorEnum_TOO_MANY_OPERANDS FunctionParsingErrorEnum_FunctionParsingError = 12
)

var FunctionParsingErrorEnum_FunctionParsingError_name = map[int32]string{
	0:  "UNSPECIFIED",
	1:  "UNKNOWN",
	2:  "NO_MORE_INPUT",
	3:  "EXPECTED_CHARACTER",
	4:  "UNEXPECTED_SEPARATOR",
	5:  "UNMATCHED_LEFT_BRACKET",
	6:  "UNMATCHED_RIGHT_BRACKET",
	7:  "TOO_MANY_NESTED_FUNCTIONS",
	8:  "MISSING_RIGHT_HAND_OPERAND",
	9:  "INVALID_OPERATOR_NAME",
	10: "FEED_ATTRIBUTE_OPERAND_ARGUMENT_NOT_INTEGER",
	11: "NO_OPERANDS",
	12: "TOO_MANY_OPERANDS",
}

var FunctionParsingErrorEnum_FunctionParsingError_value = map[string]int32{
	"UNSPECIFIED":                                 0,
	"UNKNOWN":                                     1,
	"NO_MORE_INPUT":                               2,
	"EXPECTED_CHARACTER":                          3,
	"UNEXPECTED_SEPARATOR":                        4,
	"UNMATCHED_LEFT_BRACKET":                      5,
	"UNMATCHED_RIGHT_BRACKET":                     6,
	"TOO_MANY_NESTED_FUNCTIONS":                   7,
	"MISSING_RIGHT_HAND_OPERAND":                  8,
	"INVALID_OPERATOR_NAME":                       9,
	"FEED_ATTRIBUTE_OPERAND_ARGUMENT_NOT_INTEGER": 10,
	"NO_OPERANDS":                                 11,
	"TOO_MANY_OPERANDS":                           12,
}

func (x FunctionParsingErrorEnum_FunctionParsingError) String() string {
	return proto.EnumName(FunctionParsingErrorEnum_FunctionParsingError_name, int32(x))
}

func (FunctionParsingErrorEnum_FunctionParsingError) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_48110c2fcce1f98f, []int{0, 0}
}

// Container for enum describing possible function parsing errors.
type FunctionParsingErrorEnum struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FunctionParsingErrorEnum) Reset()         { *m = FunctionParsingErrorEnum{} }
func (m *FunctionParsingErrorEnum) String() string { return proto.CompactTextString(m) }
func (*FunctionParsingErrorEnum) ProtoMessage()    {}
func (*FunctionParsingErrorEnum) Descriptor() ([]byte, []int) {
	return fileDescriptor_48110c2fcce1f98f, []int{0}
}

func (m *FunctionParsingErrorEnum) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FunctionParsingErrorEnum.Unmarshal(m, b)
}
func (m *FunctionParsingErrorEnum) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FunctionParsingErrorEnum.Marshal(b, m, deterministic)
}
func (m *FunctionParsingErrorEnum) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FunctionParsingErrorEnum.Merge(m, src)
}
func (m *FunctionParsingErrorEnum) XXX_Size() int {
	return xxx_messageInfo_FunctionParsingErrorEnum.Size(m)
}
func (m *FunctionParsingErrorEnum) XXX_DiscardUnknown() {
	xxx_messageInfo_FunctionParsingErrorEnum.DiscardUnknown(m)
}

var xxx_messageInfo_FunctionParsingErrorEnum proto.InternalMessageInfo

func init() {
	proto.RegisterEnum("google.ads.googleads.v3.errors.FunctionParsingErrorEnum_FunctionParsingError", FunctionParsingErrorEnum_FunctionParsingError_name, FunctionParsingErrorEnum_FunctionParsingError_value)
	proto.RegisterType((*FunctionParsingErrorEnum)(nil), "google.ads.googleads.v3.errors.FunctionParsingErrorEnum")
}

func init() {
	proto.RegisterFile("google/ads/googleads/v3/errors/function_parsing_error.proto", fileDescriptor_48110c2fcce1f98f)
}

var fileDescriptor_48110c2fcce1f98f = []byte{
	// 487 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x92, 0x4f, 0x6f, 0xd3, 0x30,
	0x18, 0xc6, 0x69, 0x0b, 0x1b, 0xb8, 0x20, 0x3c, 0x6b, 0x1b, 0x6b, 0x81, 0x1e, 0x7a, 0x45, 0x4a,
	0x0e, 0xb9, 0x65, 0x27, 0x37, 0x79, 0x9b, 0x5a, 0x5b, 0xec, 0xc8, 0x71, 0xca, 0x1f, 0x55, 0xb2,
	0xc2, 0x5a, 0xa2, 0x4a, 0x5b, 0x52, 0x25, 0xdd, 0x3e, 0x00, 0x1f, 0x85, 0x23, 0x1f, 0x85, 0xef,
	0xc1, 0x85, 0x33, 0x1f, 0x00, 0xa5, 0x6e, 0xb2, 0xcb, 0xd8, 0x29, 0xaf, 0xde, 0xe7, 0xf9, 0x3d,
	0xb1, 0xfc, 0x18, 0x9d, 0x67, 0x45, 0x91, 0x5d, 0xaf, 0xec, 0x74, 0x59, 0xd9, 0x66, 0xac, 0xa7,
	0x3b, 0xc7, 0x5e, 0x95, 0x65, 0x51, 0x56, 0xf6, 0xb7, 0xdb, 0xfc, 0x6a, 0xbb, 0x2e, 0x72, 0xbd,
	0x49, 0xcb, 0x6a, 0x9d, 0x67, 0x7a, 0xb7, 0xb7, 0x36, 0x65, 0xb1, 0x2d, 0xc8, 0xc8, 0x10, 0x56,
	0xba, 0xac, 0xac, 0x16, 0xb6, 0xee, 0x1c, 0xcb, 0xc0, 0xc3, 0x77, 0x4d, 0xf8, 0x66, 0x6d, 0xa7,
	0x79, 0x5e, 0x6c, 0xd3, 0x3a, 0xaa, 0x32, 0xf4, 0xf8, 0x7b, 0x0f, 0x9d, 0x4d, 0xf7, 0xf1, 0x91,
	0x49, 0x87, 0x9a, 0x83, 0xfc, 0xf6, 0x66, 0xfc, 0xbb, 0x8b, 0x8e, 0x1f, 0x12, 0xc9, 0x6b, 0xd4,
	0x4f, 0x78, 0x1c, 0x81, 0xc7, 0xa6, 0x0c, 0x7c, 0xfc, 0x84, 0xf4, 0xd1, 0x61, 0xc2, 0x2f, 0xb8,
	0xf8, 0xc8, 0x71, 0x87, 0x1c, 0xa1, 0x57, 0x5c, 0xe8, 0x50, 0x48, 0xd0, 0x8c, 0x47, 0x89, 0xc2,
	0x5d, 0x72, 0x8a, 0x08, 0x7c, 0x8a, 0xc0, 0x53, 0xe0, 0x6b, 0x6f, 0x46, 0x25, 0xf5, 0x14, 0x48,
	0xdc, 0x23, 0x67, 0xe8, 0x38, 0xe1, 0xad, 0x12, 0x43, 0x44, 0x25, 0x55, 0x42, 0xe2, 0xa7, 0x64,
	0x88, 0x4e, 0x13, 0x1e, 0x52, 0xe5, 0xcd, 0xc0, 0xd7, 0x97, 0x30, 0x55, 0x7a, 0x22, 0xa9, 0x77,
	0x01, 0x0a, 0x3f, 0x23, 0x6f, 0xd1, 0x9b, 0x7b, 0x4d, 0xb2, 0x60, 0x76, 0x2f, 0x1e, 0x90, 0xf7,
	0x68, 0xa0, 0x84, 0xd0, 0x21, 0xe5, 0x9f, 0x35, 0x87, 0xb8, 0xce, 0x9d, 0x26, 0xdc, 0x53, 0x4c,
	0xf0, 0x18, 0x1f, 0x92, 0x11, 0x1a, 0x86, 0x2c, 0x8e, 0x19, 0x0f, 0xf6, 0xe4, 0x8c, 0x72, 0x5f,
	0x8b, 0x08, 0x24, 0xe5, 0x3e, 0x7e, 0x4e, 0x06, 0xe8, 0x84, 0xf1, 0x39, 0xbd, 0x64, 0xfb, 0xa5,
	0x12, 0x52, 0x73, 0x1a, 0x02, 0x7e, 0x41, 0x6c, 0xf4, 0x61, 0x0a, 0xe0, 0x6b, 0xaa, 0x94, 0x64,
	0x93, 0x44, 0x41, 0x83, 0x69, 0x2a, 0x83, 0x24, 0x04, 0xae, 0x34, 0x17, 0x4a, 0x33, 0xae, 0x20,
	0x00, 0x89, 0x51, 0x7d, 0x4d, 0x5c, 0x34, 0xa6, 0x18, 0xf7, 0xc9, 0x09, 0x3a, 0x6a, 0xcf, 0xd6,
	0xae, 0x5f, 0x4e, 0xfe, 0x76, 0xd0, 0xf8, 0xaa, 0xb8, 0xb1, 0x1e, 0x6f, 0x72, 0x32, 0x78, 0xa8,
	0x8b, 0xa8, 0xae, 0x31, 0xea, 0x7c, 0xf1, 0xf7, 0x70, 0x56, 0x5c, 0xa7, 0x79, 0x66, 0x15, 0x65,
	0x66, 0x67, 0xab, 0x7c, 0x57, 0x72, 0xf3, 0xa6, 0x36, 0xeb, 0xea, 0x7f, 0x4f, 0xec, 0xdc, 0x7c,
	0x7e, 0x74, 0x7b, 0x01, 0xa5, 0x3f, 0xbb, 0xa3, 0xc0, 0x84, 0xd1, 0x65, 0x65, 0x99, 0xb1, 0x9e,
	0xe6, 0x8e, 0xb5, 0xfb, 0x65, 0xf5, 0xab, 0x31, 0x2c, 0xe8, 0xb2, 0x5a, 0xb4, 0x86, 0xc5, 0xdc,
	0x59, 0x18, 0xc3, 0x9f, 0xee, 0xd8, 0x6c, 0x5d, 0x97, 0x2e, 0x2b, 0xd7, 0x6d, 0x2d, 0xae, 0x3b,
	0x77, 0x5c, 0xd7, 0x98, 0xbe, 0x1e, 0xec, 0x4e, 0xe7, 0xfc, 0x0b, 0x00, 0x00, 0xff, 0xff, 0xc3,
	0x2b, 0xe9, 0x1a, 0xff, 0x02, 0x00, 0x00,
}
