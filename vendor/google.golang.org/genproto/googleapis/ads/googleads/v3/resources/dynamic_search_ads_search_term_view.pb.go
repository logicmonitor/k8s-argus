// Code generated by protoc-gen-go. DO NOT EDIT.
// source: google/ads/googleads/v3/resources/dynamic_search_ads_search_term_view.proto

package resources

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	_ "google.golang.org/genproto/googleapis/api/annotations"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// A dynamic search ads search term view.
type DynamicSearchAdsSearchTermView struct {
	// The resource name of the dynamic search ads search term view.
	// Dynamic search ads search term view resource names have the form:
	//
	// `customers/{customer_id}/dynamicSearchAdsSearchTermViews/{ad_group_id}~{search_term_fp}~{headline_fp}~{landing_page_fp}~{page_url_fp}`
	ResourceName string `protobuf:"bytes,1,opt,name=resource_name,json=resourceName,proto3" json:"resource_name,omitempty"`
	// Search term
	//
	// This field is read-only.
	SearchTerm *wrappers.StringValue `protobuf:"bytes,2,opt,name=search_term,json=searchTerm,proto3" json:"search_term,omitempty"`
	// The dynamically generated headline of the Dynamic Search Ad.
	//
	// This field is read-only.
	Headline *wrappers.StringValue `protobuf:"bytes,3,opt,name=headline,proto3" json:"headline,omitempty"`
	// The dynamically selected landing page URL of the impression.
	//
	// This field is read-only.
	LandingPage *wrappers.StringValue `protobuf:"bytes,4,opt,name=landing_page,json=landingPage,proto3" json:"landing_page,omitempty"`
	// The URL of page feed item served for the impression.
	//
	// This field is read-only.
	PageUrl *wrappers.StringValue `protobuf:"bytes,5,opt,name=page_url,json=pageUrl,proto3" json:"page_url,omitempty"`
	// True if query matches a negative keyword.
	//
	// This field is read-only.
	HasNegativeKeyword *wrappers.BoolValue `protobuf:"bytes,6,opt,name=has_negative_keyword,json=hasNegativeKeyword,proto3" json:"has_negative_keyword,omitempty"`
	// True if query is added to targeted keywords.
	//
	// This field is read-only.
	HasMatchingKeyword *wrappers.BoolValue `protobuf:"bytes,7,opt,name=has_matching_keyword,json=hasMatchingKeyword,proto3" json:"has_matching_keyword,omitempty"`
	// True if query matches a negative url.
	//
	// This field is read-only.
	HasNegativeUrl       *wrappers.BoolValue `protobuf:"bytes,8,opt,name=has_negative_url,json=hasNegativeUrl,proto3" json:"has_negative_url,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *DynamicSearchAdsSearchTermView) Reset()         { *m = DynamicSearchAdsSearchTermView{} }
func (m *DynamicSearchAdsSearchTermView) String() string { return proto.CompactTextString(m) }
func (*DynamicSearchAdsSearchTermView) ProtoMessage()    {}
func (*DynamicSearchAdsSearchTermView) Descriptor() ([]byte, []int) {
	return fileDescriptor_c0384f99ab33a76a, []int{0}
}

func (m *DynamicSearchAdsSearchTermView) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DynamicSearchAdsSearchTermView.Unmarshal(m, b)
}
func (m *DynamicSearchAdsSearchTermView) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DynamicSearchAdsSearchTermView.Marshal(b, m, deterministic)
}
func (m *DynamicSearchAdsSearchTermView) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DynamicSearchAdsSearchTermView.Merge(m, src)
}
func (m *DynamicSearchAdsSearchTermView) XXX_Size() int {
	return xxx_messageInfo_DynamicSearchAdsSearchTermView.Size(m)
}
func (m *DynamicSearchAdsSearchTermView) XXX_DiscardUnknown() {
	xxx_messageInfo_DynamicSearchAdsSearchTermView.DiscardUnknown(m)
}

var xxx_messageInfo_DynamicSearchAdsSearchTermView proto.InternalMessageInfo

func (m *DynamicSearchAdsSearchTermView) GetResourceName() string {
	if m != nil {
		return m.ResourceName
	}
	return ""
}

func (m *DynamicSearchAdsSearchTermView) GetSearchTerm() *wrappers.StringValue {
	if m != nil {
		return m.SearchTerm
	}
	return nil
}

func (m *DynamicSearchAdsSearchTermView) GetHeadline() *wrappers.StringValue {
	if m != nil {
		return m.Headline
	}
	return nil
}

func (m *DynamicSearchAdsSearchTermView) GetLandingPage() *wrappers.StringValue {
	if m != nil {
		return m.LandingPage
	}
	return nil
}

func (m *DynamicSearchAdsSearchTermView) GetPageUrl() *wrappers.StringValue {
	if m != nil {
		return m.PageUrl
	}
	return nil
}

func (m *DynamicSearchAdsSearchTermView) GetHasNegativeKeyword() *wrappers.BoolValue {
	if m != nil {
		return m.HasNegativeKeyword
	}
	return nil
}

func (m *DynamicSearchAdsSearchTermView) GetHasMatchingKeyword() *wrappers.BoolValue {
	if m != nil {
		return m.HasMatchingKeyword
	}
	return nil
}

func (m *DynamicSearchAdsSearchTermView) GetHasNegativeUrl() *wrappers.BoolValue {
	if m != nil {
		return m.HasNegativeUrl
	}
	return nil
}

func init() {
	proto.RegisterType((*DynamicSearchAdsSearchTermView)(nil), "google.ads.googleads.v3.resources.DynamicSearchAdsSearchTermView")
}

func init() {
	proto.RegisterFile("google/ads/googleads/v3/resources/dynamic_search_ads_search_term_view.proto", fileDescriptor_c0384f99ab33a76a)
}

var fileDescriptor_c0384f99ab33a76a = []byte{
	// 525 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x93, 0xc1, 0x6a, 0xdb, 0x40,
	0x10, 0x86, 0x91, 0xd3, 0x24, 0xee, 0x3a, 0x2d, 0x45, 0xf4, 0xa0, 0x9a, 0x10, 0x92, 0x86, 0x40,
	0x4e, 0x2b, 0xa8, 0x0e, 0x29, 0x2a, 0xa5, 0xc8, 0x04, 0x02, 0x4d, 0x1b, 0x8c, 0xd3, 0xf8, 0x10,
	0x0c, 0x62, 0xa2, 0x9d, 0xae, 0x45, 0xa5, 0x5d, 0xb1, 0x2b, 0xdb, 0x84, 0x90, 0x77, 0xe8, 0xa5,
	0x87, 0x5e, 0x7b, 0xec, 0x03, 0xf4, 0x21, 0xfa, 0x28, 0x79, 0x8a, 0x22, 0x4b, 0xbb, 0x71, 0x29,
	0x8d, 0x7d, 0xfb, 0xed, 0xf9, 0xff, 0x6f, 0x66, 0xc4, 0x0e, 0x39, 0xe5, 0x52, 0xf2, 0x0c, 0x7d,
	0x60, 0xda, 0xaf, 0x65, 0xa5, 0xa6, 0x81, 0xaf, 0x50, 0xcb, 0x89, 0x4a, 0x50, 0xfb, 0xec, 0x5a,
	0x40, 0x9e, 0x26, 0xb1, 0x46, 0x50, 0xc9, 0x38, 0x06, 0xa6, 0x8d, 0x2c, 0x51, 0xe5, 0xf1, 0x34,
	0xc5, 0x19, 0x2d, 0x94, 0x2c, 0xa5, 0xbb, 0x57, 0x13, 0x28, 0x30, 0x4d, 0x2d, 0x8c, 0x4e, 0x03,
	0x6a, 0x61, 0xdd, 0x17, 0xa6, 0x5f, 0x91, 0xda, 0x16, 0x75, 0xba, 0xbb, 0xd3, 0x94, 0xe6, 0xbf,
	0xae, 0x26, 0x9f, 0xfd, 0x99, 0x82, 0xa2, 0x40, 0xa5, 0x9b, 0xfa, 0xf6, 0x42, 0x14, 0x84, 0x90,
	0x25, 0x94, 0xa9, 0x14, 0x4d, 0xf5, 0xe5, 0xaf, 0x75, 0xb2, 0x73, 0x5c, 0x4f, 0x7a, 0x3e, 0x9f,
	0x2e, 0x62, 0xba, 0x16, 0x9f, 0x50, 0xe5, 0xc3, 0x14, 0x67, 0xee, 0x3e, 0x79, 0x62, 0x5a, 0xc6,
	0x02, 0x72, 0xf4, 0x9c, 0x5d, 0xe7, 0xf0, 0xf1, 0x60, 0xcb, 0xfc, 0x79, 0x06, 0x39, 0xba, 0x6f,
	0x49, 0x67, 0x61, 0x3b, 0xaf, 0xb5, 0xeb, 0x1c, 0x76, 0x5e, 0x6d, 0x37, 0xeb, 0x50, 0x33, 0x1b,
	0x3d, 0x2f, 0x55, 0x2a, 0xf8, 0x10, 0xb2, 0x09, 0x0e, 0x88, 0xb6, 0x7d, 0xdc, 0xd7, 0xa4, 0x3d,
	0x46, 0x60, 0x59, 0x2a, 0xd0, 0x5b, 0x5b, 0x21, 0x6b, 0xdd, 0xee, 0x3b, 0xb2, 0x95, 0x81, 0x60,
	0xa9, 0xe0, 0x71, 0x01, 0x1c, 0xbd, 0x47, 0x2b, 0xa4, 0x3b, 0x4d, 0xa2, 0x0f, 0x1c, 0xdd, 0x23,
	0xd2, 0xae, 0x82, 0xf1, 0x44, 0x65, 0xde, 0xfa, 0x0a, 0xe1, 0xcd, 0xca, 0x7d, 0xa1, 0x32, 0xf7,
	0x03, 0x79, 0x3e, 0x06, 0x1d, 0x0b, 0xe4, 0x50, 0xa6, 0x53, 0x8c, 0xbf, 0xe0, 0xf5, 0x4c, 0x2a,
	0xe6, 0x6d, 0xcc, 0x21, 0xdd, 0x7f, 0x20, 0x3d, 0x29, 0xb3, 0x1a, 0xe1, 0x8e, 0x41, 0x9f, 0x35,
	0xb1, 0xd3, 0x3a, 0x65, 0x68, 0x39, 0x94, 0xc9, 0xb8, 0x5a, 0xc6, 0xd0, 0x36, 0x57, 0xa2, 0x7d,
	0x6c, 0x62, 0x86, 0x76, 0x4c, 0x9e, 0xfd, 0x35, 0x5b, 0xb5, 0x5c, 0x7b, 0x29, 0xe9, 0xe9, 0xc2,
	0x5c, 0x17, 0x2a, 0x0b, 0xbf, 0x3b, 0x77, 0xd1, 0x37, 0x87, 0x1c, 0xdd, 0x3f, 0xca, 0x46, 0x15,
	0xa9, 0xa6, 0x89, 0xcc, 0xfd, 0x25, 0x2f, 0xe7, 0x32, 0x99, 0xe8, 0x52, 0xe6, 0xa8, 0xb4, 0x7f,
	0x63, 0xe4, 0xad, 0x39, 0x8c, 0xff, 0x84, 0xb4, 0x7f, 0xb3, 0xc2, 0xe5, 0xdc, 0xf6, 0xbe, 0xb6,
	0xc8, 0x41, 0x22, 0x73, 0xba, 0xf4, 0x76, 0x7a, 0xfb, 0x0f, 0x4f, 0xd9, 0xaf, 0xbe, 0x43, 0xdf,
	0xb9, 0x7c, 0xdf, 0x90, 0xb8, 0xcc, 0x40, 0x70, 0x2a, 0x15, 0xf7, 0x39, 0x8a, 0xf9, 0x57, 0xf2,
	0xef, 0xd7, 0x7e, 0xe0, 0xe2, 0xdf, 0x58, 0xf5, 0xa3, 0xb5, 0x76, 0x12, 0x45, 0x3f, 0x5b, 0x7b,
	0x27, 0x35, 0x32, 0x62, 0x9a, 0xd6, 0xb2, 0x52, 0xc3, 0x80, 0x0e, 0x8c, 0xf3, 0xb7, 0xf1, 0x8c,
	0x22, 0xa6, 0x47, 0xd6, 0x33, 0x1a, 0x06, 0x23, 0xeb, 0xb9, 0x6b, 0x1d, 0xd4, 0x85, 0x30, 0x8c,
	0x98, 0x0e, 0x43, 0xeb, 0x0a, 0xc3, 0x61, 0x10, 0x86, 0xd6, 0x77, 0xb5, 0x31, 0x1f, 0x36, 0xf8,
	0x13, 0x00, 0x00, 0xff, 0xff, 0xcd, 0x88, 0x17, 0x91, 0x9d, 0x04, 0x00, 0x00,
}
