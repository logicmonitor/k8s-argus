// Code generated by protoc-gen-go. DO NOT EDIT.
// source: google/ads/googleads/v1/services/feed_placeholder_view_service.proto

package services

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	resources "google.golang.org/genproto/googleapis/ads/googleads/v1/resources"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Request message for [FeedPlaceholderViewService.GetFeedPlaceholderView][google.ads.googleads.v1.services.FeedPlaceholderViewService.GetFeedPlaceholderView].
type GetFeedPlaceholderViewRequest struct {
	// The resource name of the feed placeholder view to fetch.
	ResourceName         string   `protobuf:"bytes,1,opt,name=resource_name,json=resourceName,proto3" json:"resource_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetFeedPlaceholderViewRequest) Reset()         { *m = GetFeedPlaceholderViewRequest{} }
func (m *GetFeedPlaceholderViewRequest) String() string { return proto.CompactTextString(m) }
func (*GetFeedPlaceholderViewRequest) ProtoMessage()    {}
func (*GetFeedPlaceholderViewRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c806439cff2804f, []int{0}
}

func (m *GetFeedPlaceholderViewRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetFeedPlaceholderViewRequest.Unmarshal(m, b)
}
func (m *GetFeedPlaceholderViewRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetFeedPlaceholderViewRequest.Marshal(b, m, deterministic)
}
func (m *GetFeedPlaceholderViewRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFeedPlaceholderViewRequest.Merge(m, src)
}
func (m *GetFeedPlaceholderViewRequest) XXX_Size() int {
	return xxx_messageInfo_GetFeedPlaceholderViewRequest.Size(m)
}
func (m *GetFeedPlaceholderViewRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFeedPlaceholderViewRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetFeedPlaceholderViewRequest proto.InternalMessageInfo

func (m *GetFeedPlaceholderViewRequest) GetResourceName() string {
	if m != nil {
		return m.ResourceName
	}
	return ""
}

func init() {
	proto.RegisterType((*GetFeedPlaceholderViewRequest)(nil), "google.ads.googleads.v1.services.GetFeedPlaceholderViewRequest")
}

func init() {
	proto.RegisterFile("google/ads/googleads/v1/services/feed_placeholder_view_service.proto", fileDescriptor_8c806439cff2804f)
}

var fileDescriptor_8c806439cff2804f = []byte{
	// 402 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x52, 0x31, 0x6b, 0xdb, 0x40,
	0x14, 0x46, 0x2a, 0x14, 0x2a, 0xda, 0x45, 0x43, 0x6b, 0xd4, 0x96, 0x1a, 0xd7, 0x43, 0xf1, 0x70,
	0x87, 0x5a, 0x30, 0xe5, 0x8a, 0x5b, 0x64, 0x4c, 0xdd, 0xa9, 0x18, 0x07, 0x34, 0x04, 0x81, 0xb8,
	0xe8, 0x5e, 0x14, 0x81, 0xa4, 0x53, 0x74, 0xb2, 0x3c, 0x84, 0x2c, 0x19, 0xb2, 0x65, 0xca, 0x3f,
	0xc8, 0x98, 0x9f, 0xe2, 0x2d, 0xe4, 0x2f, 0x64, 0xca, 0xaf, 0x08, 0xf2, 0xe9, 0xe4, 0x24, 0x58,
	0xf1, 0xf6, 0x71, 0xef, 0x7b, 0xdf, 0xf7, 0xde, 0xf7, 0xce, 0x98, 0x84, 0x9c, 0x87, 0x31, 0x60,
	0xca, 0x04, 0x96, 0xb0, 0x42, 0xa5, 0x8d, 0x05, 0xe4, 0x65, 0x14, 0x80, 0xc0, 0x87, 0x00, 0xcc,
	0xcf, 0x62, 0x1a, 0xc0, 0x11, 0x8f, 0x19, 0xe4, 0x7e, 0x19, 0xc1, 0xd2, 0xaf, 0xcb, 0x28, 0xcb,
	0x79, 0xc1, 0xcd, 0xae, 0x6c, 0x45, 0x94, 0x09, 0xd4, 0xa8, 0xa0, 0xd2, 0x46, 0x4a, 0xc5, 0x1a,
	0xb5, 0xf9, 0xe4, 0x20, 0xf8, 0x22, 0x6f, 0x35, 0x92, 0x06, 0xd6, 0x27, 0xd5, 0x9e, 0x45, 0x98,
	0xa6, 0x29, 0x2f, 0x68, 0x11, 0xf1, 0x54, 0xd4, 0xd5, 0x0f, 0x8f, 0xaa, 0x41, 0x1c, 0x41, 0x5a,
	0xc8, 0x42, 0x6f, 0x62, 0x7c, 0x9e, 0x42, 0xf1, 0x17, 0x80, 0xcd, 0x36, 0xba, 0x6e, 0x04, 0xcb,
	0x39, 0x1c, 0x2f, 0x40, 0x14, 0xe6, 0x57, 0xe3, 0x9d, 0x1a, 0xc0, 0x4f, 0x69, 0x02, 0x1d, 0xad,
	0xab, 0x7d, 0x7b, 0x33, 0x7f, 0xab, 0x1e, 0xff, 0xd3, 0x04, 0xbe, 0x5f, 0xe8, 0x86, 0xb5, 0x45,
	0x63, 0x4f, 0xee, 0x66, 0xde, 0x68, 0xc6, 0xfb, 0xed, 0x2e, 0xe6, 0x1f, 0xb4, 0x2b, 0x18, 0xf4,
	0xe2, 0x7c, 0xd6, 0xb0, 0x55, 0xa0, 0xc9, 0x0d, 0x6d, 0x69, 0xef, 0xfd, 0x3e, 0xbb, 0xbd, 0xbb,
	0xd4, 0x7f, 0x9a, 0xc3, 0x2a, 0xe2, 0x93, 0x27, 0x2b, 0x8e, 0x82, 0x85, 0x28, 0x78, 0x02, 0xb9,
	0xc0, 0x83, 0x75, 0xe6, 0xcf, 0x7a, 0x05, 0x1e, 0x9c, 0x5a, 0x1f, 0x57, 0x4e, 0x67, 0x63, 0x57,
	0xa3, 0x2c, 0x12, 0x28, 0xe0, 0xc9, 0xf8, 0x5c, 0x37, 0xfa, 0x01, 0x4f, 0x76, 0xee, 0x36, 0xfe,
	0xd2, 0x9e, 0xda, 0xac, 0xba, 0xcf, 0x4c, 0xdb, 0xff, 0x57, 0x8b, 0x84, 0x3c, 0xa6, 0x69, 0x88,
	0x78, 0x1e, 0xe2, 0x10, 0xd2, 0xf5, 0xf5, 0xf0, 0xc6, 0xb6, 0xfd, 0x7b, 0xfe, 0x52, 0xe0, 0x4a,
	0x7f, 0x35, 0x75, 0x9c, 0x6b, 0xbd, 0x3b, 0x95, 0x82, 0x0e, 0x13, 0x48, 0xc2, 0x0a, 0xb9, 0x36,
	0xaa, 0x8d, 0xc5, 0x4a, 0x51, 0x3c, 0x87, 0x09, 0xaf, 0xa1, 0x78, 0xae, 0xed, 0x29, 0xca, 0xbd,
	0xde, 0x97, 0xef, 0x84, 0x38, 0x4c, 0x10, 0xd2, 0x90, 0x08, 0x71, 0x6d, 0x42, 0x14, 0xed, 0xe0,
	0xf5, 0x7a, 0xce, 0x1f, 0x0f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x6e, 0xaf, 0x85, 0xef, 0x45, 0x03,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// FeedPlaceholderViewServiceClient is the client API for FeedPlaceholderViewService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FeedPlaceholderViewServiceClient interface {
	// Returns the requested feed placeholder view in full detail.
	GetFeedPlaceholderView(ctx context.Context, in *GetFeedPlaceholderViewRequest, opts ...grpc.CallOption) (*resources.FeedPlaceholderView, error)
}

type feedPlaceholderViewServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewFeedPlaceholderViewServiceClient(cc grpc.ClientConnInterface) FeedPlaceholderViewServiceClient {
	return &feedPlaceholderViewServiceClient{cc}
}

func (c *feedPlaceholderViewServiceClient) GetFeedPlaceholderView(ctx context.Context, in *GetFeedPlaceholderViewRequest, opts ...grpc.CallOption) (*resources.FeedPlaceholderView, error) {
	out := new(resources.FeedPlaceholderView)
	err := c.cc.Invoke(ctx, "/google.ads.googleads.v1.services.FeedPlaceholderViewService/GetFeedPlaceholderView", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FeedPlaceholderViewServiceServer is the server API for FeedPlaceholderViewService service.
type FeedPlaceholderViewServiceServer interface {
	// Returns the requested feed placeholder view in full detail.
	GetFeedPlaceholderView(context.Context, *GetFeedPlaceholderViewRequest) (*resources.FeedPlaceholderView, error)
}

// UnimplementedFeedPlaceholderViewServiceServer can be embedded to have forward compatible implementations.
type UnimplementedFeedPlaceholderViewServiceServer struct {
}

func (*UnimplementedFeedPlaceholderViewServiceServer) GetFeedPlaceholderView(ctx context.Context, req *GetFeedPlaceholderViewRequest) (*resources.FeedPlaceholderView, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFeedPlaceholderView not implemented")
}

func RegisterFeedPlaceholderViewServiceServer(s *grpc.Server, srv FeedPlaceholderViewServiceServer) {
	s.RegisterService(&_FeedPlaceholderViewService_serviceDesc, srv)
}

func _FeedPlaceholderViewService_GetFeedPlaceholderView_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFeedPlaceholderViewRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FeedPlaceholderViewServiceServer).GetFeedPlaceholderView(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.ads.googleads.v1.services.FeedPlaceholderViewService/GetFeedPlaceholderView",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FeedPlaceholderViewServiceServer).GetFeedPlaceholderView(ctx, req.(*GetFeedPlaceholderViewRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _FeedPlaceholderViewService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "google.ads.googleads.v1.services.FeedPlaceholderViewService",
	HandlerType: (*FeedPlaceholderViewServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetFeedPlaceholderView",
			Handler:    _FeedPlaceholderViewService_GetFeedPlaceholderView_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "google/ads/googleads/v1/services/feed_placeholder_view_service.proto",
}
